{
  "swagger" : "2.0",
  "info" : {
    "description" : "The branding service.",
    "version" : "1.0.0",
    "title" : "Branding",
    "contact" : { }
  },
  "host" : "c89h8o7.restletmocks.net",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json", "multipart/form-data" ],
  "produces" : [ "application/json", "multipart/form-data" ],
  "security" : [ {
    "JWT" : [ ]
  } ],
  "paths" : {
    "/styles" : {
      "get" : {
        "summary" : "get all branding styles",
        "description" : "Requires the role BRANDING_READ.\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pgstart",
          "in" : "query",
          "required" : false,
          "type" : "number",
          "description" : "Initial item/offset; negative numbers start from the end backwards (e.g. pgstart=-10&pglen=-1 would give the last 10 items).",
          "default" : 0.0,
          "x-example" : 0.0
        }, {
          "name" : "pglen",
          "in" : "query",
          "required" : false,
          "type" : "number",
          "description" : "The number of items to return in the page; a length of -1 means return all items.",
          "default" : 10.0,
          "x-example" : 100.0
        }, {
          "name" : "showDeleted",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "Set this to true to show deleted entries.",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "get operation successful.",
            "schema" : {
              "required" : [ "results" ],
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "description" : "Array of BrandingStyle objects. The array will be empty if there are no BrandingStyles.",
                  "items" : {
                    "$ref" : "#/definitions/BrandingStyle"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new BrandingStyle",
        "description" : "Requires the role BRANDING_WRITE.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BrandingStyle"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/BrandingStyle"
            }
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/styles/{id}" : {
      "get" : {
        "summary" : "Get exising BrandingStyle",
        "description" : "Requires the role BRANDING_READ.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "showDeleted",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "Set this to true to show deleted entries.",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/BrandingStyle"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update existing BrandingStyle",
        "description" : "Requires the role BRANDING_WRITE.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BrandingStyle"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Update successful.",
            "schema" : {
              "$ref" : "#/definitions/BrandingStyle"
            }
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Soft delete of the existing BrandingStyle",
        "description" : "Requires the role BRANDING_DELETE.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Delete successful.",
            "schema" : {
              "required" : [ "result" ],
              "type" : "object",
              "properties" : {
                "result" : {
                  "type" : "string",
                  "enum" : [ "SUCCESS" ]
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/styles/{id}/logo" : {
      "post" : {
        "summary" : "Set logo for BrandingStyle",
        "description" : "Requires the role BRANDING_WRITE.",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "width",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "logo image max width"
        }, {
          "name" : "height",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "logo image max height"
        } ],
        "responses" : {
          "200" : {
            "description" : "Logo file uploaded successfully.",
            "schema" : {
              "$ref" : "#/definitions/BrandingStyle"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/styles/{id}/css" : {
      "get" : {
        "summary" : "Return CSS CDN URL",
        "description" : "Looks up the CSS file based on the branding ID and redirects to the public URL of the file.",
        "parameters" : [ ],
        "responses" : {
          "302" : {
            "description" : "Redirects to the CDN's CSS file"
          }
        },
        "security" : [ ]
      },
      "put" : {
        "summary" : "Update the css for existing BrandingStyle",
        "description" : "Requires the role BRANDING_WRITE.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "css" ],
            "properties" : {
              "css" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "BrandingStyle CSS updated successfully.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "result" : {
                  "type" : "string",
                  "enum" : [ "SUCCESS" ]
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/styles/{id}/url" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    }
  },
  "securityDefinitions" : {
    "JWT" : {
      "description" : "JSON Web Token (JWT) sent either as a cookie or in the Authorization header as a bearer token",
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "Error" : {
      "type" : "object",
      "required" : [ "errors" ],
      "properties" : {
        "errors" : {
          "type" : "array",
          "description" : "This must contain one or more errors in the errors array.",
          "items" : {
            "required" : [ "code" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "See examples for documentation on each specific error message.",
                "enum" : [ "PFERR-BRN-001" ]
              },
              "desc" : {
                "type" : "string",
                "description" : "Describes the error code for debugging purposes. This will not be returned in production environments. See examples for documentation on each specific error message."
              },
              "fields" : {
                "type" : "array",
                "description" : "All fields that failed validation.",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "description" : "Defines a standard error response object.",
      "example" : "{\n    \"errors\": [\n        {\"code\":\"PFERR-ALL-001\", \"desc\":\"Fields values are invalid or missing.\", \"fields\":[]},\n        {\"code\":\"PFERR-BRN-001\", \"desc\":\" pgstart or pglen query parameters out of range.\"},\n    ]\n}"
    },
    "BrandingStyle" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "_id" : {
          "type" : "string",
          "description" : "UUID"
        },
        "name" : {
          "type" : "string"
        },
        "desc" : {
          "type" : "string"
        },
        "cssURL" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdBy" : {
          "type" : "string"
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "deleted" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "example" : "{\n    \"_id\": \"d1861092-a2ce-431c-880a-480d00d667b6\",\n    \"name\": \"Customer A Branding\",\n    \"desc\": \"Custom branding for Customer A\",\n    \"cssURL\": \"https://pf2.performancefit.com/...}\",\n    \"created\": \"2014-03-30T11:23:01.000Z\",\n    \"createdBy\": \"a33567bd-6ef7-40fa-9337-a53db6f38e94\",\n    \"modified\": \"2014-03-30T11:23:01.000Z\",\n    \"modifiedBy\": \"a33567bd-6ef7-40fa-9337-a53db6f38e94\",\n    \"deleted\": false\n}"
    },
    "Role" : {
      "type" : "string",
      "enum" : [ "BRANDING_READ", "BRANDING_WRITE", "BRANDING_DELETE" ]
    }
  }
}